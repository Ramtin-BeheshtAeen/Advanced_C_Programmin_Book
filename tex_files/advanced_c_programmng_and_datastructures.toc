\contentsline {part}{I\hspace {1em} Basic C Data Structures, Pointers, and File Systems}{5}{}%
\contentsline {chapter}{\numberline {1}Basic C Data Structures}{7}{}%
\contentsline {section}{\numberline {1.1}Arrays}{7}{}%
\contentsline {subsection}{\numberline {1.1.1}Concepts}{7}{}%
\contentsline {subsubsection}{Dynamic Arrays}{8}{}%
\contentsline {subsection}{\numberline {1.1.2}Working With Arrays}{10}{}%
\contentsline {subsubsection}{dublicating an array}{10}{}%
\contentsline {subsection}{\numberline {1.1.3}Passing an array to an function}{10}{}%
\contentsline {subsubsection}{passing the whole array}{10}{}%
\contentsline {subsubsection}{passing the arrays elements individually}{12}{}%
\contentsline {subsubsection}{retunring an array}{12}{}%
\contentsline {subsubsection}{return an array from a function by returning a pointer to the array}{13}{}%
\contentsline {subsection}{\numberline {1.1.4}Multi-Dimensional Array}{14}{}%
\contentsline {subsection}{\numberline {1.1.5}Exercises}{15}{}%
\contentsline {section}{\numberline {1.2}Structure}{15}{}%
\contentsline {subsection}{\numberline {1.2.1}Concepts}{15}{}%
\contentsline {subsection}{\numberline {1.2.2}Nesting Structures}{19}{}%
\contentsline {subsection}{\numberline {1.2.3}Array of Structures}{21}{}%
\contentsline {subsection}{\numberline {1.2.4}Sending a Structure to a function}{24}{}%
\contentsline {subsubsection}{Sending one member of the Structure to the function}{24}{}%
\contentsline {subsubsection}{Sending one member of the Structure to the function}{24}{}%
\contentsline {subsubsection}{Passing an Array of the structures to the function:}{24}{}%
\contentsline {subsection}{\numberline {1.2.5}Exercises}{28}{}%
\contentsline {section}{\numberline {1.3}Union}{28}{}%
\contentsline {section}{\numberline {1.4}Chapter Exercises}{28}{}%
\contentsline {chapter}{\numberline {2}Pointers}{29}{}%
\contentsline {section}{\numberline {2.1}Concepts}{29}{}%
\contentsline {section}{\numberline {2.2}Pointers in action:}{30}{}%
\contentsline {section}{\numberline {2.3}Incrementing Pointers Variable}{31}{}%
\contentsline {section}{\numberline {2.4}Pointers and Arrays}{31}{}%
\contentsline {section}{\numberline {2.5}malloc}{31}{}%
\contentsline {subsection}{\numberline {2.5.1}concepts}{31}{}%
\contentsline {subsection}{\numberline {2.5.2}Why do we use `malloc` when working with pointers?}{32}{}%
\contentsline {section}{\numberline {2.6}Using Pointers and Structures}{33}{}%
\contentsline {subsection}{\numberline {2.6.1}Pointer as an Structure Member}{33}{}%
\contentsline {subsection}{\numberline {2.6.2}Structure Pointer}{34}{}%
\contentsline {subsection}{\numberline {2.6.3}Pointer Member of a Structure Pointer}{35}{}%
\contentsline {section}{\numberline {2.7}initialization of the struct in depth}{36}{}%
\contentsline {subsection}{\numberline {2.7.1}Manual Assignment}{36}{}%
\contentsline {subsection}{\numberline {2.7.2}Using memset}{36}{}%
\contentsline {subsection}{\numberline {2.7.3}Designated Initializers}{36}{}%
\contentsline {section}{\numberline {2.8}Function Pointer}{36}{}%
\contentsline {subsection}{\numberline {2.8.1}Array of pointers to functions}{37}{}%
\contentsline {subsection}{\numberline {2.8.2}A Function That Return a Pointer To a Function:}{38}{}%
\contentsline {subsection}{\numberline {2.8.3}A Function That Get a Pointer To a Function As an Input:}{39}{}%
\contentsline {section}{\numberline {2.9}Exercises}{39}{}%
\contentsline {chapter}{\numberline {3}Simulating Objects and Classes in C}{41}{}%
\contentsline {section}{\numberline {3.1}Concepts}{41}{}%
\contentsline {section}{\numberline {3.2}Objects}{42}{}%
\contentsline {section}{\numberline {3.3}Inheritance}{42}{}%
\contentsline {section}{\numberline {3.4}Polymorphism}{42}{}%
\contentsline {section}{\numberline {3.5}Encapsulation}{42}{}%
\contentsline {chapter}{\numberline {4}Implementing simple Data structures in C}{43}{}%
\contentsline {section}{\numberline {4.1}Empty}{43}{}%
\contentsline {chapter}{\numberline {5}Implementing simple Algorithms in C}{45}{}%
\contentsline {section}{\numberline {5.1}implementing simple qsort algorithm}{45}{}%
